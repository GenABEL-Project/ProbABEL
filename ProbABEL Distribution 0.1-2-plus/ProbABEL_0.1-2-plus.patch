diff -rup ProbABEL_0.1-2/src/main.cpp ProbABEL_0.1-2-plus/src/main.cpp
--- ProbABEL_0.1-2/src/main.cpp	2009-10-19 16:21:31.000000000 -0400
+++ ProbABEL_0.1-2-plus/src/main.cpp	2009-11-09 13:34:37.799497063 -0500
@@ -4,7 +4,7 @@
 //
 //        Description:  ProbABEL head file.
 //
-//            Version:  0.1-0
+//            Version:  0.1-0-plus
 //            Created:  ---
 //           Revision:  none
 //
@@ -16,6 +16,10 @@
 // modified 20-Jul-2009 by YSA: small changes, bug fix in mmscore option
 // modified 22-Sep-2009 by YSA: "robust" option added
 //
+// Modified by Han Chen (hanchen@bu.edu) on Nov 9, 2009
+// to extract the covariance between the estimate of beta(SNP) and the estimate of beta(interaction)
+// based on src/main.cpp version 0.1-0 as of Oct 19, 2009
+//
 //            Company:  Department of Epidemiology, ErasmusMC Rotterdam, The Netherlands.
 //              Email:  i.aoultchenko@erasmusmc.nl, m.struchalin@erasmusmc.nl
 //
@@ -418,11 +422,22 @@ if (nohead!=1)
 	
 		if(interaction != 0)
 			{
-			*outfile[0] << sep << "beta_SNP_A1A2_" << phd.model_terms[interaction_cox] << "sebeta_SNP_A1A2" << phd.model_terms[interaction_cox]
-								 << sep << "beta_SNP_A2A2_" << phd.model_terms[interaction_cox] << "sebeta_SNP_A2A2" << phd.model_terms[interaction_cox];
+//Han Chen
+			*outfile[0] << sep << "beta_SNP_A1A2_" << phd.model_terms[interaction_cox] << sep << "sebeta_SNP_A1A2_" << phd.model_terms[interaction_cox]
+								 << sep << "beta_SNP_A1A1_" << phd.model_terms[interaction_cox] << sep << "sebeta_SNP_A1A1_" << phd.model_terms[interaction_cox];
+   #if !COXPH
+	    	if(inverse_filename == NULL && !allcov) *outfile[0] << sep << "cov_SNP_A1A2_int_SNP_" << phd.model_terms[interaction_cox]
+            << sep << "cov_SNP_A1A1_int_SNP_" << phd.model_terms[interaction_cox];
+ 	  #endif
+//Oct 26, 2009
 			for (int file=1; file<outfile.size() ; file++)
 				{		
 			  *outfile[file] << sep << "beta_SNP_" << phd.model_terms[interaction_cox]  << sep << "sebeta_SNP_" << phd.model_terms[interaction_cox];
+//Han Chen
+    #if !COXPH
+	    	if(inverse_filename == NULL && !allcov) *outfile[file] << sep << "cov_SNP_int_SNP_" << phd.model_terms[interaction_cox];
+ 	  #endif
+//Oct 26, 2009
 				}
 			}
 		*outfile[0] << sep << "chi2_SNP_2df\n";
@@ -477,8 +492,14 @@ if (nohead!=1)
 		if(interaction != 0) *outfile[0] << sep << "beta_SNP_" << phd.model_terms[interaction_cox] << sep << "sebeta_SNP_" << phd.model_terms[interaction_cox];
 
 		if(inverse_filename == NULL)
+//Han Chen
+            {
+            #if !COXPH
+	    	if(interaction != 0 && !allcov) *outfile[0] << sep << "cov_SNP_int_SNP_" << phd.model_terms[interaction_cox];
+ 	        #endif
 			*outfile[0] << sep << "chi2_SNP";
-			
+            }
+//Oct 26, 2009
 		*outfile[0] << "\n";
 
 
@@ -584,11 +605,17 @@ int maxmod=5;
 int start_pos, end_pos;
 
 std::vector<std::ostringstream *> beta_sebeta;
+//Han Chen
+std::vector<std::ostringstream *> covvalue;
+//Oct 26, 2009
 std::vector<std::ostringstream *> chi2;
 
 for(int i=0 ; i<maxmod ; i++)
 	{
 	beta_sebeta.push_back(new std::ostringstream());
+//Han Chen
+	covvalue.push_back(new std::ostringstream());
+//Oct 26, 2009
 	chi2.push_back(new std::ostringstream());
 	}
 
@@ -656,6 +683,21 @@ for (int csnp=0;csnp<nsnps;csnp++) 
 				for(int pos=start_pos ; pos<rd.beta.nrow ; pos++)
 					{
 					*beta_sebeta[model] << sep << rd.beta[pos] << sep << rd.sebeta[pos];
+//Han Chen
+				#if !COXPH
+				if (inverse_filename == NULL && !allcov && interaction != 0)
+				   {
+				   if (pos>start_pos)
+				      {if (model==0)
+				          {if (pos>start_pos+2)
+				              {*covvalue[model] << rd.covariance[pos-3] << sep << rd.covariance[pos-2];}
+                          }
+                      else
+               	          {*covvalue[model] << rd.covariance[pos-1];}
+                      }
+                   }
+                #endif	
+//Oct 26, 2009
 					}
 
 				//calculate chi2
@@ -689,6 +731,16 @@ for (int csnp=0;csnp<nsnps;csnp++) 
 					{
 					*beta_sebeta[model] << sep << "nan" << sep << "nan";
 					}
+//Han Chen
+                #if !COXPH
+                if (!allcov && interaction !=0)
+                   {if (model==0)
+                       {*covvalue[model] << "nan" << sep << "nan";}
+                   else
+                       {*covvalue[model] << "nan";}
+                   }
+                #endif
+//Oct 26, 2009
 				*chi2[model] << "nan";
 				}
 			}//end of moel cycle
@@ -696,12 +748,50 @@ for (int csnp=0;csnp<nsnps;csnp++) 
 
 
 
-		
-			*outfile[0] << beta_sebeta[0]->str() << sep << chi2[0]->str() << "\n";
-			*outfile[1] << beta_sebeta[1]->str() << sep << chi2[1]->str() << "\n";
-			*outfile[2] << beta_sebeta[2]->str() << sep << chi2[2]->str() << "\n";
-			*outfile[3] << beta_sebeta[3]->str() << sep << chi2[3]->str() << "\n";
-			*outfile[4] << beta_sebeta[4]->str() << sep << chi2[4]->str() << "\n";
+//Han Chen
+			*outfile[0] << beta_sebeta[0]->str() << sep;
+				#if !COXPH
+				if (!allcov && interaction !=0)
+                {
+                *outfile[0] << covvalue[0]->str() << sep;
+                }
+                #endif
+            *outfile[0] << chi2[0]->str() << "\n";
+			*outfile[1] << beta_sebeta[1]->str() << sep;
+				#if !COXPH
+				if (!allcov && interaction !=0)
+                {
+                *outfile[1] << covvalue[1]->str() << sep;
+                }
+                #endif
+            *outfile[1] << chi2[1]->str() << "\n";
+			*outfile[2] << beta_sebeta[2]->str() << sep;
+				#if !COXPH
+				if (!allcov && interaction !=0)
+                {
+                *outfile[2] << covvalue[2]->str() << sep;
+                }
+                #endif
+            *outfile[2] << chi2[2]->str() << "\n";
+			*outfile[3] << beta_sebeta[3]->str() << sep;
+				#if !COXPH
+				if (!allcov && interaction !=0)
+                {
+                *outfile[3] << covvalue[3]->str() << sep;
+                }
+                #endif
+            *outfile[3] << chi2[3]->str() << "\n";
+			*outfile[4] << beta_sebeta[4]->str() << sep;
+				#if !COXPH
+				if (!allcov && interaction !=0)
+                {
+                *outfile[4] << covvalue[4]->str() << sep;
+                }
+                #endif
+            *outfile[4] << chi2[4]->str() << "\n";		
+//Oct 26, 2009
+
+
 
 
 
@@ -752,6 +842,14 @@ for (int csnp=0;csnp<nsnps;csnp++) 
 			for(int pos=start_pos ; pos<rd.beta.nrow ; pos++)
 				{
 				*beta_sebeta[0] << sep << rd.beta[pos] << sep << rd.sebeta[pos];
+//Han Chen
+				#if !COXPH
+				if (inverse_filename == NULL && !allcov && interaction != 0)
+				   {if (pos>start_pos)
+               	       {*covvalue[0] << rd.covariance[pos-1];}
+                   }
+                #endif	
+//Oct 26, 2009
 				}
 
 
@@ -792,13 +890,26 @@ for (int csnp=0;csnp<nsnps;csnp++) 
 				}
 			if(inverse_filename == NULL)
 				{
+//Han Chen
+                #if !COXPH
+                if (!allcov && interaction !=0)
+                   {*covvalue[0] << "nan";}
+                #endif
+//Oct 26, 2009
 				*chi2[0] << "nan";
 				}
 			}
 		
 			if(inverse_filename == NULL)
 				{
-				*outfile[0] << beta_sebeta[0]->str() << sep << chi2[model]->str()<< "\n";
+//Han Chen
+				*outfile[0] << beta_sebeta[0]->str() << sep;
+				#if !COXPH
+				if (!allcov && interaction !=0)
+                   {*outfile[0] << covvalue[0]->str() << sep;}
+                #endif
+                *outfile[0] << chi2[model]->str() << "\n";
+//Oct 26, 2009
 				}
 			else
 				{
@@ -810,6 +921,9 @@ for (int csnp=0;csnp<nsnps;csnp++) 
 	for(int i=0 ; i<5 ; i++)
 		{
 		beta_sebeta[i]->str("");
+//Han Chen
+		covvalue[i]->str("");
+//Oct 26, 2009
 		chi2[i]->str("");
 		}
 
diff -rup ProbABEL_0.1-2/src/reg1.h ProbABEL_0.1-2-plus/src/reg1.h
--- ProbABEL_0.1-2/src/reg1.h	2009-09-23 12:52:26.000000000 -0400
+++ ProbABEL_0.1-2-plus/src/reg1.h	2009-11-09 13:34:50.743979140 -0500
@@ -4,13 +4,17 @@
 //
 //        Description:  ProbABEL
 //
-//            Version:  0.2
+//            Version:  0.2-plus
 //            Created:  ---
 //           Revision:  none
 //  last modification:  11-Jan-2009
 //
 //             Author:  Yurii S. Aulchenko
 //			  modified by: 	Maksim V. Struchalin, 11-Jan-2009 
+//
+// Modified by Han Chen (hanchen@bu.edu) on Nov 9, 2009
+// based on src/reg1.h version 0.2 as of Oct 19, 2009
+//
 //            Company:  ErasmusMC, Epidemiology & Biostatistics Department, The Netherlands.
 //              Email:  i.aoultchenko@erasmusmc.nl, m.struchalin@erasmusmc.nl
 //
@@ -61,12 +65,22 @@ mematrix<double> apply_model(mematrix<do
 					nX_without_interact_phe.reinit(nX.nrow,nX.ncol-1);
 					for(int row=0 ; row < nX.nrow ; row++)
 						{
+//Han Chen
+                        col_new=-1;
 						for(int col=0 ; col<nX.ncol ; col++)
 							{
-							col_new++;
-							if(col != interaction && iscox) nX_without_interact_phe[row*nX_without_interact_phe.ncol+col_new] = nX[row*nX.ncol+col];
-							if(col != interaction-1 && !iscox) nX_without_interact_phe[row*nX_without_interact_phe.ncol+col_new] = nX[row*nX.ncol+col];
-							}
+							if(col != interaction && !iscox)
+                                    {
+                                   	col_new++;
+                                    nX_without_interact_phe[row*nX_without_interact_phe.ncol+col_new] = nX[row*nX.ncol+col];
+                                    }
+							if(col != interaction-1 && iscox)
+                                    {
+                                   	col_new++;
+                                    nX_without_interact_phe[row*nX_without_interact_phe.ncol+col_new] = nX[row*nX.ncol+col];
+                                    }
+							}//interaction_only, model==0, ngpreds==2
+//Oct 26, 2009
 						}
 					return nX_without_interact_phe;
 					}//end of is_interaction_excluded
@@ -163,6 +177,33 @@ mematrix<double> apply_model(mematrix<do
 		if(interaction != 0)	
 		nX[i*nX.ncol+c2] = X[i*nX.ncol+interaction] * nX[i*nX.ncol+c1];//Maksim: interaction with SNP
 		}
+//Han Chen
+				int col_new=-1;
+				if(is_interaction_excluded)
+					{
+					mematrix<double> nX_without_interact_phe;
+					nX_without_interact_phe.reinit(nX.nrow,nX.ncol-1);
+					for(int row=0 ; row < nX.nrow ; row++)
+						{
+						col_new=-1;
+						for(int col=0 ; col<nX.ncol ; col++)
+							{
+							if(col != interaction && !iscox) 
+								{
+								col_new++;
+								nX_without_interact_phe[row*nX_without_interact_phe.ncol+col_new] = nX[row*nX.ncol+col];
+								}
+							if(col != interaction-1 && iscox)
+								{
+								col_new++;
+								nX_without_interact_phe[row*nX_without_interact_phe.ncol+col_new] = nX[row*nX.ncol+col];
+								}
+
+							}
+						}
+					return nX_without_interact_phe;
+					}//interaction_only, model!=0, ngpreds==2
+//Oct 26, 2009
 	return nX;
 }
 
@@ -179,6 +220,9 @@ class linear_reg
 public:
 	mematrix<double> beta;
 	mematrix<double> sebeta;
+//Han Chen
+	mematrix<double> covariance;
+//Oct 26, 2009
 	mematrix<double> residuals;
 	double sigma2;
 	double loglik;
@@ -189,6 +233,10 @@ public:
 		int length_beta = (rdata.X).ncol;
 		beta.reinit(length_beta,1);
 		sebeta.reinit(length_beta,1);
+//Han Chen
+		if (length_beta>1)
+		{covariance.reinit(length_beta-1,1);}
+//Oct 26, 2009
 		residuals.reinit(rdata.nids,1);
 		sigma2=-1.;
 		loglik=-9.999e+32;
@@ -295,6 +343,14 @@ public:
 		int length_beta = X.ncol;
 		beta.reinit(length_beta,1);
 		sebeta.reinit(length_beta,1);
+//Han Chen
+		if (length_beta>1)
+		   {if (model==0 && interaction!=0 && ngpreds==2 && length_beta>2)
+               {covariance.reinit(length_beta-2,1);}
+            else                 
+               {covariance.reinit(length_beta-1,1);}
+            }
+//Oct 26, 2009
 		mematrix<double> tX = transpose(X);
 	
 
@@ -416,9 +472,39 @@ public:
 			if (robust) {
 				double value = sqrt(robust_sigma2.get(i,i));
 				sebeta.put(value,i,0);
+//Han Chen
+			if (i>0)
+			{
+                    if (model==0 && interaction!=0 && ngpreds==2 && length_beta>2)
+                    {if (i>1)
+                        {double covval=robust_sigma2.get(i,i-2);
+                        covariance.put(covval,i-2,0);}
+                    }
+                    else
+                    {
+                    double covval=robust_sigma2.get(i,i-1);
+                    covariance.put(covval,i-1,0);
+                    }
+             }
+//Oct 26, 2009
 			} else {
 				double value = sqrt(sigma2_internal*tXX_i.get(i,i));
 				sebeta.put(value,i,0);
+//Han Chen
+			if (i>0)
+			{
+                    if (model==0 && interaction!=0 && ngpreds==2 && length_beta>2)
+                    {if (i>1)
+                        {double covval=sigma2_internal*tXX_i.get(i,i-2);
+                        covariance.put(covval,i-2,0);}
+                    }
+                    else
+                    {
+                    double covval=sigma2_internal*tXX_i.get(i,i-1);
+                    covariance.put(covval,i-1,0);
+                    }
+             }
+//Oct 26, 2009
 			}
 		}
 		if (verbose) {printf("sebeta (%d):\n",sebeta.nrow);sebeta.print();}
@@ -474,6 +560,9 @@ class logistic_reg
 public:
 	mematrix<double> beta;
 	mematrix<double> sebeta;
+//Han Chen
+	mematrix<double> covariance;
+//Oct 26, 2009
 	mematrix<double> residuals;
 	double sigma2;
 	double loglik;
@@ -485,6 +574,10 @@ public:
 		int length_beta = (rdata.X).ncol;
 		beta.reinit(length_beta,1);
 		sebeta.reinit(length_beta,1);
+//Han Chen
+		if (length_beta>1)
+		{covariance.reinit(length_beta-1,1);}
+//Oct 26, 2009
 		residuals.reinit((rdata.X).nrow,1);
 		sigma2=-1.;
 		loglik=-9.999e+32;
@@ -502,6 +595,14 @@ public:
 		int length_beta = X.ncol;
 		beta.reinit(length_beta,1);
 		sebeta.reinit(length_beta,1);
+//Han Chen
+		if (length_beta>1)
+		   {if (model==0 && interaction!=0 && ngpreds==2 && length_beta>2)
+               {covariance.reinit(length_beta-2,1);}
+            else                 
+               {covariance.reinit(length_beta-1,1);}
+            }
+//Oct 26, 2009
 		mematrix<double> W((X).nrow,1);
 		mematrix<double> z((X).nrow,1);
 		mematrix<double> tXWX(length_beta,length_beta);
@@ -590,12 +691,44 @@ public:
 
 		for (int i=0;i<(length_beta);i++)
 		{	
-			if (robust) {
+			if (robust) 
+            {
 				double value = sqrt(robust_sigma2.get(i,i));
 				sebeta.put(value,i,0);
-			} else {
+//Han Chen
+			if (i>0)
+			{
+                    if (model==0 && interaction!=0 && ngpreds==2 && length_beta>2)
+                    {if (i>1)
+                        {double covval=robust_sigma2.get(i,i-2);
+                        covariance.put(covval,i-2,0);}
+                    }
+                    else
+                    {
+                    double covval=robust_sigma2.get(i,i-1);
+                    covariance.put(covval,i-1,0);
+                    }
+             }
+//Oct 26, 2009
+			} 
+            else {
 				double value = sqrt(tXWX_i.get(i,i));
 				sebeta.put(value,i,0);
+//Han Chen
+			if (i>0)
+			{
+                    if (model==0 && interaction!=0 && ngpreds==2 && length_beta>2)
+                    {if (i>1)
+                        {double covval=tXWX_i.get(i,i-2);
+                        covariance.put(covval,i-2,0);}
+                    }
+                    else
+                    {
+                    double covval=tXWX_i.get(i,i-1);
+                    covariance.put(covval,i-1,0);
+                    }
+             }
+//Oct 26, 2009
 			}
 		}
 		if (verbose) {printf("sebeta (%d):\n",sebeta.nrow);sebeta.print();}
diff -rup ProbABEL_0.1-2/src/version.h ProbABEL_0.1-2-plus/src/version.h
--- ProbABEL_0.1-2/src/version.h	2009-10-19 16:27:51.000000000 -0400
+++ ProbABEL_0.1-2-plus/src/version.h	2009-11-09 13:35:12.673487121 -0500
@@ -1,3 +1,3 @@
-#define VERSION "0.1-2"
-#define DATE "October 19, 2009"
+#define VERSION "0.1-2-plus"
+#define DATE "Nov 9, 2009"
 
